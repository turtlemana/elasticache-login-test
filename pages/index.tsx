import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import React,{useEffect} from 'react'
import {getProviders,signIn,signOut} from 'next-auth/react'
import Image from 'next/image'
import { useRouter } from 'next/router'; 
import { useSession } from 'next-auth/react'
import useSWR from 'swr'
import fetcher from '../utils/fetchUserInfo'

const inter = Inter({ subsets: ['latin'] })

const Home=({providers}:any)=> {
  const {data:session}=useSession();

  const {data:userInfo,error,isValidating,mutate}=useSWR("/api/auth/getUser",fetcher)

  if(session) {return (<div className={styles.main}>
    <div className={styles.description}>
    <Image src={userInfo?.profileImage} alt="profile" width={150} height={150} className="rounded-full mb-5" />

      <p>Name: {userInfo?.name}</p>
      <p>Email: {userInfo?.email}</p>
      <p>Platform: {userInfo?.platform_type}</p>
      <p>Created: {userInfo?.created_at}</p>
      <p>access Level: {userInfo?.accessLevel}</p>
      
    </div>
    <button className={'bg-white hover:bg-slate-200 text-black border-2 font-normal py-2 px-4 rounded w-[350px]'} onClick={()=>signOut()}>Logout</button>
  </div>)}
  else {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
      <div className="min-h-screen justify-center items-center align-middle content-center">
     
    <div className="flex flex-col  justify-center items-center content-center my-40 max-[1024px]:my-16">
        <div>
            <Image src="https://cdn.dribbble.com/users/168075/screenshots/1946699/callofktulu-shot.jpg" alt="logo" width={500} height={500} className="  mb-5"/>
        </div>
        <div className="flex flex-col justify-center mt-5">
        {/* <button className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" onClick={()=>signIn('google')}>Sign in with Google</button> */}
        {Object.values(providers).map((provider:any)=>(<div className={"mb-1"} key={provider.name}>
            <button className="bg-white hover:bg-slate-200 text-black border-2 font-normal py-2 px-4 rounded w-[350px]" onClick={()=>{signIn(provider.id)}}>Sign in with {provider.name}</button>
        </div>))}
    </div>
        
    </div>
    </div>
       
       
      </main>
    </>
  )
}}
export default Home;

export async function getServerSideProps() {
  const providers = await getProviders()
  
  // const session = await unstable_getServerSession(context.req, context.res,authOptions)
  // const res= await fetch(`http://localhost:3000/api/auth/getUser`)
  // const user=await res.json()
  // console.log(user)

  // if (user) {
  //   return {
  //     redirect: {
  //       destination: '/auth/signin',
  //       permanent: false,
  //     },
  //   }
  // }

  


  return {
    props: {providers},
  }
}